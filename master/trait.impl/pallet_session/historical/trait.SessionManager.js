(function() {
    var implementors = Object.fromEntries([["kitchensink_runtime",[["impl <a class=\"trait\" href=\"pallet_session/historical/trait.SessionManager.html\" title=\"trait pallet_session::historical::SessionManager\">SessionManager</a>&lt;&lt;&lt;<a class=\"enum\" href=\"sp_runtime/enum.MultiSignature.html\" title=\"enum sp_runtime::MultiSignature\">MultiSignature</a> as <a class=\"trait\" href=\"sp_runtime/traits/trait.Verify.html\" title=\"trait sp_runtime::traits::Verify\">Verify</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime/traits/trait.Verify.html#associatedtype.Signer\" title=\"type sp_runtime::traits::Verify::Signer\">Signer</a> as <a class=\"trait\" href=\"sp_runtime/traits/trait.IdentifyAccount.html\" title=\"trait sp_runtime::traits::IdentifyAccount\">IdentifyAccount</a>&gt;::<a class=\"associatedtype\" href=\"sp_runtime/traits/trait.IdentifyAccount.html#associatedtype.AccountId\" title=\"type sp_runtime::traits::IdentifyAccount::AccountId\">AccountId</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>&gt; for <a class=\"struct\" href=\"kitchensink_runtime/staking_playground/struct.AliceAsOnlyValidator.html\" title=\"struct kitchensink_runtime::staking_playground::AliceAsOnlyValidator\">AliceAsOnlyValidator</a>"]]],["pallet_staking",[["impl&lt;T: <a class=\"trait\" href=\"pallet_staking/trait.Config.html\" title=\"trait pallet_staking::Config\">Config</a>&gt; SessionManager&lt;&lt;T as Config&gt;::AccountId, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.unit.html\">()</a>&gt; for <a class=\"struct\" href=\"pallet_staking/struct.Pallet.html\" title=\"struct pallet_staking::Pallet\">Pallet</a>&lt;T&gt;"],["impl&lt;T: <a class=\"trait\" href=\"pallet_staking/trait.Config.html\" title=\"trait pallet_staking::Config\">Config</a>&gt; SessionManager&lt;&lt;T as Config&gt;::AccountId, <a class=\"struct\" href=\"pallet_staking/struct.Exposure.html\" title=\"struct pallet_staking::Exposure\">Exposure</a>&lt;&lt;T as Config&gt;::AccountId, &lt;T as <a class=\"trait\" href=\"pallet_staking/trait.Config.html\" title=\"trait pallet_staking::Config\">Config</a>&gt;::<a class=\"associatedtype\" href=\"pallet_staking/trait.Config.html#associatedtype.CurrencyBalance\" title=\"type pallet_staking::Config::CurrencyBalance\">CurrencyBalance</a>&gt;&gt; for <a class=\"struct\" href=\"pallet_staking/struct.Pallet.html\" title=\"struct pallet_staking::Pallet\">Pallet</a>&lt;T&gt;"]]],["pallet_staking_ah_client",[["impl&lt;T: <a class=\"trait\" href=\"pallet_staking_ah_client/pallet/trait.Config.html\" title=\"trait pallet_staking_ah_client::pallet::Config\">Config</a>&gt; SessionManager&lt;&lt;T as Config&gt;::AccountId, Exposure&lt;&lt;T as Config&gt;::AccountId, &lt;T as <a class=\"trait\" href=\"pallet_staking_ah_client/pallet/trait.Config.html\" title=\"trait pallet_staking_ah_client::pallet::Config\">Config</a>&gt;::<a class=\"associatedtype\" href=\"pallet_staking_ah_client/pallet/trait.Config.html#associatedtype.CurrencyBalance\" title=\"type pallet_staking_ah_client::pallet::Config::CurrencyBalance\">CurrencyBalance</a>&gt;&gt; for <a class=\"struct\" href=\"pallet_staking_ah_client/pallet/struct.Pallet.html\" title=\"struct pallet_staking_ah_client::pallet::Pallet\">Pallet</a>&lt;T&gt;"]]]]);
    if (window.register_implementors) {
        window.register_implementors(implementors);
    } else {
        window.pending_implementors = implementors;
    }
})()
//{"start":57,"fragment_lengths":[1255,1199,831]}